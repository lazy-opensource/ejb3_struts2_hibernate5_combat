<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>


    <!--
    注意这里继承json-default来实现返回JSON到前台的功能；
    继承多个时可以用逗号分隔；
    还有一点就是要加入json相关的jar
    -->
    <package name="testlifecycle" namespace="/struts/testlifecycle" extends="json-default,globalPackage">

        <!--
        这里使用了Struts2的通配符技术：
        ==================================通配符说明=====================================
        一个 Web 应用可能有成百上千个 action 声明. 可以利用 struts 提供的通配符映射机制把多个彼此相似的映射关系简化为一个映射关系
        通配符映射规则:
        若找到多个匹配, 没有通配符的那个将胜出
        若指定的动作不存在, Struts 将会尝试把这个 URI 与任何一个包含着通配符 * 的动作名及进行匹配
        被通配符匹配到的 URI 字符串的子串可以用 {1}, {2} 来引用. {1} 匹配第一个子串, {2} 匹配第二个子串…
        {0} 匹配整个 URI
        若 Struts 找到的带有通配符的匹配不止一个, 则按先后顺序进行匹配
        * 可以匹配零个或多个字符, 但不包括 / 字符. 如果想把 / 字符包括在内, 需要使用 **. 如果需要对某个字符进行转义, 需要使用 \.

        解释：假如请求如下：
        http://localhost:8080/ejb3_client/struts/testlifecycle/TestSessionLifeCycleAction_testStatelessLifecycle
        重点是这部分：TestSessionLifeCycleAction_testStatelessLifecycle
        {1} = TestSessionLifeCycleAction
        {2} =testStatelessLifecycle
        这么讲明白了吗？-->
        <action name="*_*" method="{2}" class="com.lzy.j2ee.client.action.testlifecycle.TestSessionLifeCycleAction">

            <!--type="json"表示请求结果返回json字符串-->
            <result name="success" type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
                <param name="root">result</param>
            </result>
        </action>
    </package>

</struts>
